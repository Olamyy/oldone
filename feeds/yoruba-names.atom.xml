<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Indent</title><link href="/" rel="alternate"></link><link href="/feeds/yoruba-names.atom.xml" rel="self"></link><id>/</id><updated>2018-06-02T00:00:00+00:00</updated><entry><title>Generating Yoruba Names using Char-RNN</title><link href="/blog/2018/06/02/yoruba-names-neural-networks/" rel="alternate"></link><published>2018-06-02T00:00:00+00:00</published><updated>2018-06-02T00:00:00+00:00</updated><author><name>Olamilekan Wahab</name></author><id>tag:,2018-06-02:blog/2018/06/02/yoruba-names-neural-networks/</id><summary type="html">&lt;p&gt;Last week, I was bored. &lt;/p&gt;
&lt;p&gt;Mainly because most of the work I did during the week was theoretical.
Reading papers(&lt;a href="https://arxiv.org/abs/1206.5538"&gt;this&lt;/a&gt;, &lt;a href="https://arxiv.org/abs/cond-mat/0606005"&gt;this&lt;/a&gt;, &lt;a href="https://arxiv.org/abs/1707.02410"&gt;this&lt;/a&gt;, and &lt;a href="https://arxiv.org/abs/1802.07740"&gt;this&lt;/a&gt;), 
trying to get familiar with some concepts in differential calculus and making my first set of changes to the sklearn library.&lt;/p&gt;
&lt;p&gt;On friday night, I decided to do something fun for the weekend. Around that same time, thanks to &lt;a href=""&gt;Jannelle Shane&lt;/a&gt;, I stumbled upon the 
&lt;code&gt;char-rnn&lt;/code&gt; concept and decided building something on it would be my fun project for the weekend.&lt;/p&gt;
&lt;p&gt;This article is an attempt to document everything I learnt while working with &lt;code&gt;char-rnn&lt;/code&gt; and how I was able to generate yoruba names with it.&lt;/p&gt;
&lt;p&gt;The rest of the article will be organised as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is &lt;code&gt;char-rnn&lt;/code&gt;? &lt;/li&gt;
&lt;li&gt;Yoruba Name Generation&lt;ul&gt;
&lt;li&gt;Inspiration&lt;/li&gt;
&lt;li&gt;Getting the data&lt;/li&gt;
&lt;li&gt;Choosing the approach&lt;/li&gt;
&lt;li&gt;Result Benchmark, Challenges and Improvements&lt;/li&gt;
&lt;li&gt;Some of the generated names&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Resources  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;What is &lt;code&gt;Char-RNN&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Char-rnn&lt;/code&gt; short for &lt;code&gt;Character Recurrent Neural Network&lt;/code&gt; are multi-layer neural networks for training textual models. They are essentially made up of RNN, LSTM and GRU.
According to the author, &lt;a href=""&gt;Andrej Karperthy&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The (&lt;code&gt;char-rnn&lt;/code&gt;) model takes one text file as input and trains a Recurrent Neural Network that learns to predict the next character in a sequence. The RNN can then be used to generate text 
character by character that will look like the original training data. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Given the above, a &lt;code&gt;char-rnn&lt;/code&gt; model can be thought of classification model in that it's output is a probability distribution of character classes.
The model is fed the characters one at a time and an output is generated at each ending character.&lt;/p&gt;
&lt;p&gt;Since this is a classification task, categorical cross entropy loss is used to train the model. This loss is mathematically given as &lt;/p&gt;
&lt;p&gt;$$ \sum_{i=1}^{n}y_{i}log(Y_{i})\label{c}\tag{1}$$ &lt;/p&gt;
&lt;p&gt;where $n$ represents number of samples&lt;/p&gt;
&lt;p&gt;where $y_{i}$ represents encoded target value(character in this instance)&lt;/p&gt;
&lt;p&gt;where $Y_{i}$ represents vector of probabilities over the samples&lt;/p&gt;
&lt;p&gt;The target characters(values) are derived by one hot encoding them as one-hot vectors. The position of the &lt;code&gt;1&lt;/code&gt; represents the position of the
generated character. The generated characters are created by iteratively minimizing the loss in &lt;code&gt;equation 1&lt;/code&gt; above.&lt;/p&gt;
&lt;h4&gt;Yoruba Name Generation&lt;/h4&gt;
&lt;h3&gt;Inspiration&lt;/h3&gt;
&lt;p&gt;Some weeks back, I had this idea &lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/_olamilekan_/status/997502923952345089"&gt;Tweet of _olamilekan_/997502923952345089&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, I was not able to work on this because &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;I could not come up with a reasonable hardline for sentence delimiters in fuji music.
    I asked this on twitter but so far, no headway yet.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/_olamilekan_/status/997504191038967810"&gt;Tweet of _olamilekan_/997504191038967810&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There was really nowhere (at least that I know of) where I can get lyrics to fuji music.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While still ranting on twitter, &lt;a href="https://mobile.twitter.com/ogunbode_"&gt;Femi&lt;/a&gt; suggested a work he did using LSTMs to generate new names he using the &lt;a href="yorubanames.com"&gt;Yoruba Names&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/ogunbode_/status/997503841062084608"&gt;Tweet of ogunbode_/997503841062084608&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;On the same thread, &lt;a href=""&gt;Perfect&lt;/a&gt; mentioned and shared the Yoruba Names API and that was all the inspiration that lead to this work.&lt;/p&gt;
&lt;h3&gt;The Data&lt;/h3&gt;
&lt;p&gt;The Yoruba names database contains 6842 of which 6280 were published. I would assume the 562 unpublished names were as a still undergoing scrutiny for errors or were not right for the 
platform.&lt;/p&gt;
&lt;p&gt;Each name had the following structure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pronunciation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;ipaNotation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;variants&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Àrẹ&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;syllables&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;à-à-rẹ&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;meaning&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;The one who is the chief.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;extendedMeaning&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;morphology&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ààrẹ&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;geoLocation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;place&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;OTHERS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;region&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;OTHERS&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;famousPeople&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Bọ́lá Àrẹ, gospel musician&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;inOtherLanguages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;media&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://en.wikipedia.org/wiki/Bola_Are&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;tonalMark&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;submittedBy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Not Available&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;etymology&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;part&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ààrẹ&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;meaning&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;chief&amp;quot;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PUBLISHED&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;createdAt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;843000000&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;updatedAt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="mi"&gt;814000000&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Ààrẹ&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Getting this data was easy. All it took was a saved &lt;code&gt;wget&lt;/code&gt; request to their &lt;a href="yorubaname.com/swagger-ui.html"&gt;API&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget &lt;span class="s1"&gt;&amp;#39;http://yorubaname.com/v1/names?count=6842&amp;#39;&lt;/span&gt; -O yorubanames.json
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Since the task is to generate names, after getting the data, every other field in the dataset asides the &lt;code&gt;name&lt;/code&gt; field was dropped. This is
majorly because &lt;code&gt;char-rnn&lt;/code&gt; cares less about feature samples and more about the characters that make up the needed label column. Another reason 
would be because, I personally, haven't found a way to use tabular data with multiple features on &lt;code&gt;char-rnn&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The dataset had 6284 entries which is somewhat very &lt;code&gt;small&lt;/code&gt; and has been made available &lt;a href="https://github.com/Olamyy/created_datasets"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Choosing the approach&lt;/h3&gt;
&lt;p&gt;There were a number of different approaches I could have taken while working on this.
Some of these approaches are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using the Pytorch implementation of &lt;code&gt;char-rnn&lt;/code&gt; &lt;a href="https://github.com/karpathy/char-rnn].com/karpathy/char-rnn"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using this theano/lassagne &lt;a href="https://github.com/Lasagne/Recipes/blob/master/examples/lstm_text_generation.py"&gt;implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using &lt;a href="https://github.com/hjweide/lasagne-char-rnn"&gt;Hendrik Weideman&lt;/a&gt;'s lassagne implementation&lt;/li&gt;
&lt;li&gt;Using the &lt;a href="https://github.com/minimaxir/textgenrnn"&gt;textgenrnn&lt;/a&gt; python package&lt;/li&gt;
&lt;li&gt;Writing my own custom implementation as a way to learn.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I started by writing my own custom &lt;a href=""&gt;implementation&lt;/a&gt; of &lt;code&gt;char-rnn&lt;/code&gt; but the performance was a bit poor. I ended using &lt;code&gt;textgenrnn&lt;/code&gt; which is
a Keras implementation of the concept.&lt;/p&gt;
&lt;p&gt;The textgenrnn library was written in python 3 and optimized to ensure:&lt;/p&gt;
&lt;p&gt;&lt;img alt="textgen" src="/images/textgen.png" /&gt; &lt;/p&gt;
&lt;p&gt;An added advantage of using textgenrnn is easy setup with fewer lines of code. A fully working instance of char-rnn can be set up using
the library in as little as 8 lines of code.&lt;/p&gt;
&lt;p&gt;For my Yoruba names use case, I was able to setup a fully running char-rnn model on the data using the code below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;textgenrnn&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;textgenrnn&lt;/span&gt;

&lt;span class="n"&gt;textgen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;textgenrnn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;textgen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train_from_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yorubanames.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_epochs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;#yorubanames.csv contains the&lt;/span&gt;
&lt;span class="c1"&gt;#  6842 names available on the yoruba names platform.&lt;/span&gt;

&lt;span class="n"&gt;textgen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Result Benchmark, Challenges and Improvements.&lt;/h4&gt;
&lt;p&gt;Using the default textgenrnn config, the model seems to perform quite well, generating names, 
interesting enough to be taken as original yoruba names. However, most(83%) of the names were monosyllabic which would suggest they were more of actions(verbs) than names.&lt;/p&gt;
&lt;p&gt;To improve this, I tried to get the optimal hyperparameters for the model. Using &lt;code&gt;sklearn&lt;/code&gt;'s GridSearch algorithm, I was able to conclude on the following parameters as the 
best performing.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cfg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;line_delimited&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="s1"&gt;&amp;#39;num_epochs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;gen_epochs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;train_size&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;validation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;is_csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Training the data with this config very much improved the generated names. The names were now made up of either 4 or 3 syllables which was much more acceptable.&lt;/p&gt;
&lt;p&gt;While this is nowhere near perfection, some of the challenges I faced while doing this include:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Understanding how the model chooses yoruba signs (amin) for each name.&lt;/li&gt;
&lt;li&gt;For some weird reason, the model seems to perform way better(generate better names) when I export the dataset with its numerical index than when there's no index. I've tried investigating this
but haven't been able to come up with a good explanation as to why this happens.&lt;/li&gt;
&lt;li&gt;The library does not provide access to all Keras Model APIs so there was really no empirical way to measure its performance asides manual calculations.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some possible improvements on my initial work would be :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Look for a way to include all features of the yoruba names dataset in the training. This would mean, looking for a way to include tabular multi feature datasets in &lt;code&gt;char-rnn&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Improve the textgenrnn package to make it a bit more pythonic.&lt;/li&gt;
&lt;li&gt;Generate meanings and along with each name. This would help provide more context as to what the algorithm perceives the meaning of the name to be.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Cross section of generated names&lt;/h2&gt;
&lt;p&gt;The first 50 generated names are shown below&lt;/p&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Ifádájù&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Àyínàjà&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;ḿrìnní&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Aríyéyé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Àjẹ̀yà&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;láyèsì&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Adeguntà&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Olúwanmíĺlá&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;antà&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;̀tẹ̀t́ládé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Adéyìntà&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;Àdẹ̀yàn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;oshiníyè&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;Olúwat̀mí&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;Olúwátóyè&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;láníyì&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;td&gt;Akínfádù&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;ògbélá&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;td&gt;Adégbé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;Olúwàtàn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;Àyìbádé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20&lt;/th&gt;
      &lt;td&gt;̀jẹ́yì&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;21&lt;/th&gt;
      &lt;td&gt;Ifádéyé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;22&lt;/th&gt;
      &lt;td&gt;Ifadòyíní&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;23&lt;/th&gt;
      &lt;td&gt;Adébíyì&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;24&lt;/th&gt;
      &lt;td&gt;Fátóyè&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25&lt;/th&gt;
      &lt;td&gt;Adémilé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;26&lt;/th&gt;
      &lt;td&gt;Olúwákóyé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;27&lt;/th&gt;
      &lt;td&gt;ĺruníĺlá&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;28&lt;/th&gt;
      &lt;td&gt;ḿdùnmí&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;29&lt;/th&gt;
      &lt;td&gt;Fádáyè&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;30&lt;/th&gt;
      &lt;td&gt;Àjòyí&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;31&lt;/th&gt;
      &lt;td&gt;Àyínlẹ́yé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;32&lt;/th&gt;
      &lt;td&gt;Ifádéyé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;33&lt;/th&gt;
      &lt;td&gt;Olúwabíróyè&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;34&lt;/th&gt;
      &lt;td&gt;láníyè&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;35&lt;/th&gt;
      &lt;td&gt;Akínráyì&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;36&lt;/th&gt;
      &lt;td&gt;Olúwáwó&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;37&lt;/th&gt;
      &lt;td&gt;Ìdẹ̀jú&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;38&lt;/th&gt;
      &lt;td&gt;Olúwaranísan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;39&lt;/th&gt;
      &lt;td&gt;Ìbóyè&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;40&lt;/th&gt;
      &lt;td&gt;ólá&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;41&lt;/th&gt;
      &lt;td&gt;Adégbé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;42&lt;/th&gt;
      &lt;td&gt;Àbẹ́lá&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;43&lt;/th&gt;
      &lt;td&gt;oloolúwadá&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;44&lt;/th&gt;
      &lt;td&gt;Olúwáshinílá&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;45&lt;/th&gt;
      &lt;td&gt;Akínbẹ́mi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;46&lt;/th&gt;
      &lt;td&gt;Báyé&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;47&lt;/th&gt;
      &lt;td&gt;oluntì&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;48&lt;/th&gt;
      &lt;td&gt;Olúwáníyì&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;49&lt;/th&gt;
      &lt;td&gt;Àyínká&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50&lt;/th&gt;
      &lt;td&gt;Máyìn&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/karpathy/char-rnn"&gt;https://github.com/karpathy/char-rnn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/minimaxir/textgenrnn"&gt;https://github.com/minimaxir/textgenrnn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ekzhang/char-rnn-keras/blob/master/Visualization.ipynb"&gt;https://github.com/ekzhang/char-rnn-keras/blob/master/Visualization.ipynb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/41484580/gridsearch-with-keras-neural-networks"&gt;https://stackoverflow.com/questions/41484580/gridsearch-with-keras-neural-networks&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</summary><category term="deep-learning"></category><category term="char-rnn"></category><category term="python"></category><category term="texgenrnn"></category><category term="yoruba"></category><category term="yorubanames"></category></entry></feed>